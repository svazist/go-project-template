stages:
  - testing
  - build
  - package

build_image:
  image: docker
  stage: build
  tags:
    - docker
  services:
    - docker:dind
  variables:
    GIT_STRATEGY: 'fetch'
    GIT_CHECKOUT: 'true'
    DOCKER_HOST: tcp://docker:2375
    DOCKER_DRIVER: overlay2
    BUILD_NAME: '$DOCKER_ENV_CI_REGISTRY_IMAGE:${CI_COMMIT_TAG}'
    VERSION: "${CI_COMMIT_TAG}"
    BUILD: "${CI_COMMIT_SHORT_SHA}"
    GO_VERSION: "golang:1.13.0-alpine"
  before_script:
    - docker version
    - docker login -u $CI_REGISTRY_USER -p $CI_BUILD_TOKEN $CI_REGISTRY_IMAGE
  script:
    - export MAINLINE_VERSION=`echo ${CI_COMMIT_TAG} | sed -E 's/^(v[0-9])(\.[0-9]+)(\.[0-9]+)/\1/g'`
    - docker pull $GO_VERSION || true
    - docker run --rm -v `pwd`:/go/src -w /go/src $GO_VERSION go mod vendor || true
    - docker pull $CI_REGISTRY_IMAGE:latest || true
    - export DATE=`date '+%Y-%m-%dT%H:%M:%S'`
    - docker build  --cache-from=$CI_REGISTRY_IMAGE:latest -t $CI_REGISTRY_IMAGE:$CI_COMMIT_TAG -t $CI_REGISTRY_IMAGE:$MAINLINE_VERSION -t $CI_REGISTRY_IMAGE:latest --build-arg BUILD=${BUILD} --build-arg VERSION=${VERSION} --build-arg DATE=${DATE} .
    - docker push $CI_REGISTRY_IMAGE:$CI_COMMIT_TAG
    - docker push $CI_REGISTRY_IMAGE:$MAINLINE_VERSION
    - docker push $CI_REGISTRY_IMAGE:latest
  only: ["tags"]
  cache:
    untracked: true
    paths:
      - vendor
#  except:
#    changes:
#      - "*.md"
#      - "**/*.md"
#      - ".gitignore"